/*
 * GoatChat API
 * server API
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import okhttp3.OkHttpClient;
import org.junit.jupiter.api.*;
import org.openapitools.client.ApiClient;
import org.openapitools.client.ApiException;
import org.openapitools.client.model.*;

import java.util.*;

/**
 * API tests for ConversationApi
 */
@Disabled
public class ConversationApiTest {

    private final ConversationApi api = new ConversationApi();
    private final MessageApi messageApi = new MessageApi();
    private final UserApi userApi = new UserApi();
    UserCredentialsDTO userCredentialsDTO = new UserCredentialsDTO();
    UserCredentialsDTO userCredentialsDTO2 = new UserCredentialsDTO();


    @BeforeEach
    public void init() throws ApiException {
        OkHttpClient.Builder builder = new OkHttpClient.Builder();
        OkHttpClient okHttpClient = builder.cookieJar(new MyCookieJar()).build();
        ApiClient apiClient = new ApiClient(okHttpClient);
        userApi.setApiClient(apiClient);
        messageApi.setApiClient(apiClient);
        // Create a user
        userCredentialsDTO
                .login("hamzTdEazdne")
                .password("pwd")
                .domain("goats")
                .pictureBase64("maPhotoEnBase64");

        userCredentialsDTO2
                .login("zkrzdreETd")
                .password("pwd")
                .domain("goats")
                .pictureBase64("maPhotoEnBase64");

        // Sign up the user
        userApi.signup(userCredentialsDTO);
        userApi.signin(userCredentialsDTO);

    }

    @AfterEach
    public void tearDown() throws ApiException {
        // Delete the user created earlier
        userApi.delete(userCredentialsDTO.getLogin());
        userApi.signout();
        userApi.signin(userCredentialsDTO2);
        userApi.delete(userCredentialsDTO2.getLogin());
        userApi.signout();
    }



    /**
     * GET conversation/getAllConversationsOfUser
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getAllConversationOfUserTest() throws ApiException {
        //ConversationDisplayDTO response = api.getAllConversationOfUser();
        //JE NE PEUX PAS TESTER CETTE METHODE CAR JE N'ARRIVE PAS A AVOIR DES MESSAGES (VOIR MESSAGEAPITEST POUR DETAILS),
        //ET JE N'AI PAS DE METHODE ADD CONVERSATION
    }

}
